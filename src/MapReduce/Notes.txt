Map-Reduce is a functional programming model it servers 2 purpose
Map -> Transforming data
Reduce -> Aggregating data
(combine elements of a stream and produces a single value)

Ex: Stream: [2,4,5,7,8,5,3,2,4] Sum of numbers present in stream? Example of Reduce.

Map() -> Transform Stream<Object> to Stream of int.
Reduce() -> combine stream of int and produce the sum result.


Reduce method:
T reduce(T identity, BinaryOperator<T> accumulator);
1. identity is an initial value of type T
2. accumulator is a function for combining two values.

Integer sumResult = Stream.of(2,3,4,4,5,6).reduce(0, (a,b) -> a+b);

Identity: 0 which is nothing initial value
Accumulator: (a, b) -> a+b function